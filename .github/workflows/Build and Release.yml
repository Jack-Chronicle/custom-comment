name: Build and Auto Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 1. Check if version was changed
      - name: Check if package.json version was changed in this push
        id: check_version
        run: |
          git fetch origin master
          CHANGED=$(git diff origin/master...HEAD -- package.json)
          echo "$CHANGED"
          if echo "$CHANGED" | grep '"version":'; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      # 2. Conditionally bump patch version or just get the current one
      - name: Bump patch version if needed & output version for later jobs
        id: set_version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          if [ "${{ steps.check_version.outputs.version_changed }}" = "false" ]; then
            NEW_VER=$(npm version patch -m "chore: bump version to %s [skip ci]")
            git push origin HEAD:master --follow-tags
            NEW_VER=${NEW_VER#v}
          else
            NEW_VER=$(node -p "require('./package.json').version")
          fi
          echo "new_version=v$NEW_VER" >> $GITHUB_OUTPUT

      - run: npm ci
      - run: npm run build

      - name: Upload plugin files
        uses: actions/upload-artifact@v4
        with:
          name: obsidian-plugin-build
          path: |
            main.js
            manifest.json
            styles.css

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: obsidian-plugin-build
          path: ./release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.new_version }}
          name: Release ${{ needs.build.outputs.new_version }}
          body: |
            Automated release of version ${{ needs.build.outputs.new_version }}.
          files: release/*
