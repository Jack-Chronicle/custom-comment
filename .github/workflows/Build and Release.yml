name: Build and Auto Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Needed for version check and pushing tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci
      - run: npm run build

      - name: Check if package.json version was changed in this push
        id: check_version
        run: |
          git fetch origin master
          CHANGED=$(git diff origin/master...HEAD -- package.json)
          echo "$CHANGED"
          if echo "$CHANGED" | grep '"version":'; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Bump patch version
        if: steps.check_version.outputs.version_changed == 'false'
        id: bump_version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          NEW_VER=$(npm version patch -m "chore: bump version to %s [skip ci]")
          git push origin HEAD:master --follow-tags
          echo "new_version=$NEW_VER" >> $GITHUB_OUTPUT

      # If version was already bumped (minor/major), use the current version for the release
      - name: Get current version as release version (if no patch bump)
        if: steps.check_version.outputs.version_changed == 'true'
        id: curr_version
        run: |
          CUR_VER=$(node -p "require('./package.json').version")
          echo "new_version=v$CUR_VER" >> $GITHUB_OUTPUT

      - name: Upload plugin files
        uses: actions/upload-artifact@v4
        with:
          name: obsidian-plugin-build
          path: |
            main.js
            manifest.json
            styles.css

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: obsidian-plugin-build
          path: ./release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.new_version || needs.build.outputs.curr_version }}
          name: Release ${{ needs.build.outputs.new_version || needs.build.outputs.curr_version }}
          body: |
            Automated release of version ${{ needs.build.outputs.new_version || needs.build.outputs.curr_version }}.
          files: release/*
