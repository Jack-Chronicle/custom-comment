"use strict";var U=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var ne=Object.getOwnPropertyNames;var ie=Object.prototype.hasOwnProperty;var se=(h,r)=>{for(var e in r)U(h,e,{get:r[e],enumerable:!0})},le=(h,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of ne(r))!ie.call(h,l)&&l!==e&&U(h,l,{get:()=>r[l],enumerable:!(t=te(r,l))||t.enumerable});return h};var re=h=>le(U({},"__esModule",{value:!0}),h);var ae={};se(ae,{default:()=>$});module.exports=re(ae);var H=require("obsidian");var j={template:"%% {cursor} %%",wordOnlyMode:!1,additionalMarkers:[]};var F=require("obsidian"),V=class extends F.PluginSettingTab{constructor(r,e){super(r,e),this.plugin=e}display(){let{containerEl:r}=this;r.empty(),new F.Setting(r).setName("Comment Format").setDesc("Use {cursor} wherever you want the cursor to go (e.g. '%% {cursor} %%' or '<!-- {cursor} -->').").addText(t=>t.setValue(this.plugin.settings.template).onChange(async l=>{this.plugin.settings.template=l||"%% {cursor} %%",await this.plugin.saveSettings()})),new F.Setting(r).setName("Word-only toggle mode").setDesc("If enabled, toggling will un/comment the word at the cursor's location rather than inserting a comment at the cursor position.").addToggle(t=>t.setValue(!!this.plugin.settings.wordOnlyMode).onChange(async l=>{this.plugin.settings.wordOnlyMode=l,await this.plugin.saveSettings()})),r.createEl("h3",{text:"Additional Marker Sets"}),(this.plugin.settings.additionalMarkers||[]).forEach((t,l)=>{let M=new F.Setting(r).setName(`Marker Set ${l+1}`).addToggle(a=>a.setValue(!!t.registerCommand).onChange(async o=>{this.plugin.settings.additionalMarkers&&(this.plugin.settings.additionalMarkers[l].registerCommand=o,await this.plugin.saveSettings(),this.plugin.registerMarkerCommands(!0),this.display())})).addText(a=>a.setPlaceholder("Start marker").setValue(t.start).onChange(async o=>{this.plugin.settings.additionalMarkers&&(this.plugin.settings.additionalMarkers[l].start=o,await this.plugin.saveSettings())})).addText(a=>a.setPlaceholder("End marker").setValue(t.end).onChange(async o=>{this.plugin.settings.additionalMarkers&&(this.plugin.settings.additionalMarkers[l].end=o,await this.plugin.saveSettings())})).addExtraButton(a=>a.setIcon("cross").setTooltip("Remove marker set").onClick(async()=>{this.plugin.settings.additionalMarkers&&(this.plugin.settings.additionalMarkers.splice(l,1),await this.plugin.saveSettings(),this.display())}))}),new F.Setting(r).addButton(t=>t.setButtonText("Add Marker Set").setCta().onClick(async()=>{this.plugin.settings.additionalMarkers||(this.plugin.settings.additionalMarkers=[]),this.plugin.settings.additionalMarkers.push({start:"",end:"",registerCommand:!1}),await this.plugin.saveSettings(),this.display()}))}};function G(h){return h.replace(/\s+/g," ").trim()}function z(h,r){let e=r.indexOf(h);if(e!==-1)return{idx:e,full:!0};for(let t=h.length-1;t>0;t--){if(r.includes(h.slice(0,t)))return{idx:r.indexOf(h.slice(0,t)),full:!1,partial:h.slice(0,t)};if(r.includes(h.slice(-t)))return{idx:r.indexOf(h.slice(-t)),full:!1,partial:h.slice(-t)}}return{idx:-1,full:!1}}function q(h,r){let e=/[\p{L}\p{N}_]+/gu,t;for(;(t=e.exec(h))!==null;)if(r>=t.index&&r<=t.index+t[0].length)return{start:t.index,end:t.index+t[0].length};return null}function C(...h){console.log("[CustomComment DEV]",...h)}var $=class extends H.Plugin{constructor(){super(...arguments);this._markerCommandIds=[];this._cleanupGuard=!1}async onload(){C("Plugin loading..."),await this.loadSettings(),this.addSettingTab(new V(this.app,this)),this.addCommand({id:"reload-marker-commands",name:"Reload Marker Commands",callback:()=>this.registerMarkerCommands(!0)}),this.registerMarkerCommands()}registerMarkerCommands(e=!1){e&&this._markerCommandIds&&(this._markerCommandIds=[]),this._markerCommandIds=[];let t=this.settings.template??"%% {cursor} %%",l=t.indexOf("{cursor}"),M="%%",a="%%";l!==-1&&(M=t.slice(0,l).trim()||"%%",a=t.slice(l+8).trim()||"%%");let o="toggle-comment-template";this.addCommand({id:o,name:`Toggle Comment: (${M}|${a})`,editorCallback:g=>this.toggleComment(g)}),this._markerCommandIds.push(o),Array.isArray(this.settings.additionalMarkers)&&this.settings.additionalMarkers.forEach((g,m)=>{if(g&&g.registerCommand){let i=`toggle-comment-marker-set-${m+1}`;this.addCommand({id:i,name:(()=>{let n=g.start?.trim()||"%%",S=g.end?.trim()||"%%";return`Toggle Marker ${m+1}: (${n}|${S})`})(),checkCallback:(n,S)=>(!n&&S&&this.toggleComment(S,g),!0)}),this._markerCommandIds.push(i)}}),C("Marker commands registered:",this._markerCommandIds)}async loadSettings(){this.settings=Object.assign({},j,await this.loadData()),C("Settings loaded:",this.settings)}async saveSettings(){await this.saveData(this.settings),C("Settings saved:",this.settings)}async reloadPlugin(){await this.app.plugins.disablePlugin(this.manifest.id),await this.app.plugins.enablePlugin(this.manifest.id),C("Plugin reloaded")}insertComment(e){let t=this.settings.template,l=t.indexOf("{cursor}");if(l===-1){e.replaceSelection(t),C("Inserted template (no cursor placeholder)");return}let M=t.slice(0,l).trim(),a=t.slice(l+8).trim(),o=`${M} ${a}`.replace(/\s+/g," ").trim(),g=e.getCursor();e.replaceSelection(`${M}  ${a}`.replace(/\s+/g," ").replace(" "," {cursor} "));let m=M.split(`
`),i=m.length-1,n=m[m.length-1].length+1;e.setCursor({line:g.line+i,ch:(i?0:g.ch)+n}),C("Inserted comment at cursor")}toggleComment(e,t){C("toggleComment called",{selection:e.getSelection(),cursor:e.getCursor(),markerSet:t});let l,M;if(t)l=t.start.trim(),M=t.end.trim();else{let u=this.settings.template,p=u.indexOf("{cursor}"),x=u,b="";p!==-1&&(x=u.slice(0,p),b=u.slice(p+8)),l=x.trim(),M=b.trim()}let a=G(l),o=G(M),g=e.getSelection(),m=e.getCursor(),i=e.getCursor("from"),n=e.getCursor("to"),S=e.getLine(m.line),w,f=null;g?w=g:(f=q(S,m.ch),f&&m.ch>f.start&&m.ch<f.end?(w=S.slice(f.start,f.end),i={line:m.line,ch:f.start},n={line:m.line,ch:f.end}):(w="",i={line:m.line,ch:m.ch},n={line:m.line,ch:m.ch}));let A=-1,B=-1,_="",J=!1,v=a,O=o,oe=!!(v&&O&&v!==O);C("[Detection] selection:",g),C("[Detection] text:",w);let K=z(a,w),Q=z(o,w);if(C("[Detection] foundStart:",K),C("[Detection] foundEnd:",Q),g){let u=[],p=[],x=e.lineCount();for(let s=0;s<x;s++){let c=e.getLine(s),d=0;for(;(d=c.indexOf(a,d))!==-1;)u.push({line:s,ch:d}),d+=a.length;for(d=0;(d=c.indexOf(o,d))!==-1;)p.push({line:s,ch:d}),d+=o.length}let b=null,D=[];for(let s=0,c=0,d=0;s<u.length+p.length;){let y=c<u.length?u[c]:null,k=d<p.length?p[d]:null,N=!1;if(y&&(!k||y.line<k.line||y.line===k.line&&y.ch<k.ch))D.push(y),c++,N=!0;else if(k){if(D.length>0){let I=D.pop();if(I){let L=k,E={line:I.line,ch:I.ch},T={line:L.line,ch:L.ch+o.length},P=i,R=n,Y=(P.line<T.line||P.line===T.line&&P.ch<T.ch)&&(R.line>E.line||R.line===E.line&&R.ch>E.ch),Z=R.line<E.line||R.line===E.line&&R.ch<=E.ch,ee=P.line>T.line||P.line===T.line&&P.ch>=T.ch;if(Y&&!Z&&!ee){b={start:I,end:L};break}}}d++}else break}if(b){let{start:s,end:c}=b,d=0;e.getLine(s.line)[s.ch+a.length]===" "&&(d=1);let k=0,N=e.getLine(c.line);c.ch>0&&N[c.ch-1]===" "&&(k=1);let I=0,L=0;s.line===i.line&&s.ch<i.ch&&(I+=a.length+d),c.line===i.line&&c.ch<i.ch&&(I+=o.length+k),s.line===n.line&&s.ch<n.ch&&(L+=a.length+d),c.line===n.line&&c.ch<n.ch&&(L+=o.length+k),e.transaction({changes:[{from:{line:c.line,ch:c.ch-k},to:{line:c.line,ch:c.ch+o.length},text:""},{from:{line:s.line,ch:s.ch},to:{line:s.line,ch:s.ch+a.length+d},text:""}]});let E={...i},T={...n};I&&E.line===i.line&&(E.ch=Math.max(0,E.ch-I)),L&&T.line===n.line&&(T.ch=Math.max(E.ch,T.ch-L)),C("Uncommented marker pair encompassing selection",{from:i,to:n,pairToRemove:b,removedBeforeStart:I,removedBeforeEnd:L,selFrom:E,selTo:T}),e.setSelection(E,T);return}if(g){let s=e.getRange(i,n),c=a+(s?" ":"")+s+(s?" ":"")+o;e.replaceRange(c,i,n);let d=a.length+(s?1:0),y={line:i.line,ch:i.ch+d},k;i.line===n.line?k={line:n.line,ch:n.ch+d}:k={line:n.line,ch:n.ch},e.setSelection(y,k),C("Commented region (no marker pair found)",{from:i,to:n,commented:c});return}}else return;if(J){let u=S.slice(0,A),p=S.slice(O&&B!==-1?B+O.length:S.length),x=0;_.startsWith(" ")&&(_=_.slice(1),x=1);let b=0;_.endsWith(" ")&&(_=_.slice(0,-1),b=1);let D=u+_+p;if(e.setLine(m.line,D),g){let s=i.ch,c=n.ch;i.ch<=A+v.length+x?s=A:s=i.ch-v.length+x,O&&B!==-1&&n.ch>=B?c=A+_.length:c=n.ch-v.length+x,s=Math.max(0,s),c=Math.max(s,c);let d={line:m.line,ch:s},y={line:m.line,ch:c};e.setSelection(d,y),C("Uncommented region",{from:i,to:n,region:_})}else return}else if(g){let u=e.getRange(i,n),p=v+(u?" ":"")+u+(u?" ":"")+O;e.replaceRange(p,i,n);let x=v.length+(u?1:0),b=O.length+(u?1:0),D={line:i.line,ch:i.ch+x},s;i.line===n.line?s={line:n.line,ch:n.ch+x}:s={line:n.line,ch:n.ch},e.setSelection(D,s),C("Commented region",{from:i,to:n,commented:p})}else return;function X(u){let p=e.getValue().split(`
`),x=Math.max(0,Math.min(u.line,p.length-1)),b=Math.max(0,Math.min(u.ch,p[x]?.length??0));return{line:x,ch:b}}let W=X(e.getCursor());(W.line!==e.getCursor().line||W.ch!==e.getCursor().ch)&&e.setCursor(W)}toggleCommentAtCursor(e){let t=this.settings.template,l=t.indexOf("{cursor}"),M=t,a="";l!==-1&&(M=t.slice(0,l),a=t.slice(l+8));let o=M.trim(),g=a.trim(),m=e.getCursor(),i=e.getLine(m.line),n=i.indexOf(o),S=g?i.lastIndexOf(g):-1,w=!1;if(o&&g?w=n!==-1&&S!==-1&&m.ch>=n+o.length&&m.ch<=S+g.length:o&&(w=n!==-1&&m.ch>=n+o.length),w){let f=i;o&&(f=f.replace(o,"")),g&&(f=f.replace(g,"")),f=f.trim(),e.setLine(m.line,f)}}};
//# sourceMappingURL=main.js.map
